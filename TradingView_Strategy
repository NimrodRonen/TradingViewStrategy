//@version=5
strategy("Omri MACD Strategy", overlay=true)

var posDirection = "None"

candlesLen = input.int(defval = 3, group = "side arguements", title = "Count of Candles")
var bool[] isOutOfRange = array.new_bool(candlesLen,false)

dataType = input.source(close, "Data source")
fastLen = input(20, title = "Fast moving average")
typeMA = input.string(title = "Method", defval = "SMA", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group="Smoothing")
smoothingLength = input.int(title = "Length", defval = 5, minval = 1, maxval = 100, group="Smoothing")

deltaMaFromClose = input.float(title = "Delta moving average from Close", defval = 2.2, group = "side arguements")
epsilon = input.float(title = "epsilon calculate", defval = 0, group = "side arguements")

var bool isCCIUpperLimit = false
var bool isCCIDownLimit = false

CCI = ta.cci(dataType, fastLen)
Ma = ta.sma(dataType, fastLen)

isCandlesTrue(Candles) =>
    bool isTrue = true
    for i = 0 to array.size(Candles) - 1
        if array.get(Candles, i) == false
            isTrue := false
            break
    isTrue

placeToPut(Candles) =>
    int place = 0
    for i = 0 to array.size(Candles) - 1
        place := i
        if array.get(Candles, i) == false
            break
    place

upperLimit = 100 + epsilon
LowerLimit = -100 - epsilon
smoothingLine = ta.sma(CCI, smoothingLength)
positionId = "CCI_Averge"
isCrossOver = ta.crossover(CCI,smoothingLine)
isCrossUnder = ta.crossunder(CCI,smoothingLine)
//deltaCrash = CCI-smoothingLine

if posDirection == "None" or (CCI > LowerLimit and CCI < upperLimit)
    for i = 0 to array.size(isOutOfRange) - 1
        array.set(isOutOfRange, i, false)


if (math.abs(close - Ma)) <= deltaMaFromClose
    if isCCIUpperLimit
        array.set(isOutOfRange, placeToPut(isOutOfRange), true)
        if isCandlesTrue(isOutOfRange) and posDirection == "Long"
            strategy.close(positionId) //stop
            posDirection := "None"
        if smoothingLine > upperLimit
            if(isCrossUnder)
                strategy.entry(positionId, strategy.short, comment = "Start Short")  
                isOutOfRange := array.new_bool(candlesLen,false)
                posDirection := "Short" 
        

    else if isCCIDownLimit
        array.set(isOutOfRange, placeToPut(isOutOfRange), true)
        if posDirection == "Short" and isCandlesTrue(isOutOfRange)
            strategy.close(positionId) // stop
            posDirection := "None"
        if smoothingLine < LowerLimit
            if(isCrossOver)
                strategy.entry(positionId, strategy.long, comment = "Start Long")
                isOutOfRange := array.new_bool(candlesLen,false)
                posDirection := "Long"
        

// update in late the paremeters
if CCI >= upperLimit
    isCCIUpperLimit := true
    isCCIDownLimit := false
else
    isCCIUpperLimit := false
    if CCI <= LowerLimit   
        isCCIDownLimit := true